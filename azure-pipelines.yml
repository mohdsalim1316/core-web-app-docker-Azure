# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'sc-acr-ag'
  imageRepository: 'dotnetapp'
  containerRegistry: 'acrag612.azurecr.io'
   slotName: 'ecommerce-stage'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
    ###
    - script: |
        npm install
        npm run build
      displayName: 'Install and Build'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'  # or build folder
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

     - stage: Deploy_Staging
       dependsOn: Build
       jobs:
       - deployment: DeployStaging
         environment: 'staging'
         pool:
           vmImage: 'ubuntu-latest'
         strategy:
           runOnce:
             deploy:
               steps:
               - download: current
                 artifact: drop
               - task: AzureWebApp@1
                 inputs:
                   azureSubscription: '$(azureSubscription)'
                   appName: '$(webAppName)'
                   package: '$(Pipeline.Workspace)/drop/app.zip'
                   deployToSlotOrASE: true
                   resourceGroupName: '<YourResourceGroup>'
                   slotName: '$(slotName)'
     








     ###
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure Pass - Sponsorship(3ee584d2-9742-4a05-93a9-26b5a16709ec)'
        appType: 'webAppContainer'
        WebAppName: 'agwebappdockerdevops'
        DockerNamespace: 'acrag612.azurecr.io'
        DockerRepository: 'dotnetapp'
        DockerImageTag: 'latest'
    
    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: 'Azure Pass - Sponsorship(3ee584d2-9742-4a05-93a9-26b5a16709ec)'
        Action: 'Restart Azure App Service'
        WebAppName: 'agwebappdockerdevops'
